{"version":3,"sources":["webpack:///./src/components/prop-types-table/PropTypeWrapper.js","webpack:///./src/components/prop-types-table/PropTypeDescription.js","webpack:///./src/components/prop-types-table/PropTypeHeading.js","webpack:///./src/components/PropsTable.js","webpack:///./src/pages/components/dialog.mdx","webpack:///./src/components/Page.js"],"names":["PropTypeWrapper","render","children","this","props","className","PureComponent","PropTypeDescription","PropTypeHeading","defaultValue","name","required","type","isArrayOf","getSpecificPropTypes","value","map","val","join","Object","keys","key","PropsTable","prop","raw","getDocsForComponent","data","result","allComponentMetadata","edges","find","node","displayName","of","query","componentDocs","rename","composes","length","filePath","slice","indexOf","docblock","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","flatItems","IA","foundation","items","item","related","x","id","filter","reduce","acc","curr","Page","getMetaInfo","location","pathname","split","getRelatedItems","metaInfo","componentDidCatch","error","errorInfo","console","relatedItems","Fragment","property","content","autoFocus","onClick","navigate","marginLeft","marginRight","display","icon","ArrowLeftIcon","height","is","href","github","target","style","marginBottom","image","Link","to","iconBefore","React","Component","PageContainer"],"mappings":"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","file":"component---src-pages-components-dialog-mdx-9a64c163577261599f54.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class PropTypeWrapper extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node\n  }\n\n  render() {\n    const { children } = this.props\n    return <div className=\"PropTypeWrapper\">{children}</div>\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class PropTypeDescription extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node\n  }\n\n  render() {\n    const { children } = this.props\n    return <div className=\"PropTypeDescription\">{children}</div>\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nconst getSpecificPropTypes = ({ name, value }) => {\n  switch (name) {\n    // Enums are treated as just having simple values, so no recursive step needed.\n    case 'enum':\n      return value.map(val => val.value).join(' | ')\n    case 'union':\n      return value.map(val => getSpecificPropTypes(val)).join(' | ')\n    case 'arrayOf':\n      return `Array<${getSpecificPropTypes(value)}>`\n    case 'shape':\n      if (typeof value === 'object') {\n        return `{ ${Object.keys(value)\n          .map(\n            key =>\n              `${key}${value[key].required ? '' : '?'}: ${getSpecificPropTypes(\n                value[key]\n              )}`\n          )\n          .join(', ')} }`\n      }\n\n      return value\n\n    // In the case that the type isn't one of these \"nested\" types,\n    // i.e. it's just a primitive value, just return the name\n    default:\n      return name\n  }\n}\n\nexport default class PropTypeHeading extends PureComponent {\n  static propTypes = {\n    defaultValue: PropTypes.any,\n    name: PropTypes.string,\n    required: PropTypes.bool,\n    type: PropTypes.any,\n    isArrayOf: PropTypes.string\n  }\n\n  render() {\n    const { defaultValue, name, required, type, isArrayOf } = this.props\n\n    return (\n      <div className=\"PropTypeHeading\">\n        <code>\n          <span className=\"PropTypeHeading-name\">{name}</span>\n          <span className=\"PropTypeHeading-propType\">\n            {getSpecificPropTypes(type)}\n          </span>\n          {isArrayOf && (\n            <span className=\"PropTypeHeading-arrayOf\">{isArrayOf}</span>\n          )}\n        </code>\n        {defaultValue ? (\n          <code className=\"PropTypeHeading-defaultValue\">\n            {' '}\n            = {defaultValue.value}\n          </code>\n        ) : null}\n        {required ? (\n          <span className=\"PropTypeHeading-required\">required</span>\n        ) : null}\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport PropTypeWrapper from './prop-types-table/PropTypeWrapper'\nimport PropTypeDescription from './prop-types-table/PropTypeDescription'\nimport PropTypeHeading from './prop-types-table/PropTypeHeading'\n\nexport default class PropsTable extends PureComponent {\n  static propTypes = {\n    of: PropTypes.string.isRequired,\n    rename: PropTypes.string,\n  }\n\n  isArrayOf = (prop) => {\n    if (\n      prop.type &&\n      prop.type.name === 'arrayOf' &&\n      typeof prop.type.value === 'object' &&\n      typeof prop.type.value.raw === 'string'\n    ) {\n      return prop.type.value.raw\n    }\n  }\n\n  /**\n   * The StaticQuery loads all of the docs within MolecularUI.\n   * We find the docs for just the component we are looking for.\n   */\n  getDocsForComponent = (data) => {\n    const result = data.allComponentMetadata.edges.find(({ node }) => {\n      return node.displayName === this.props.of\n    })\n\n    if (result) return result.node\n    return null\n  }\n\n  render() {\n    return (\n      /**\n       * The plugin gatsby-transformer-react-docgen run react-docgen\n       * on all of MolecularUI and this query returns all of the data for\n       * creating prop types.\n       */\n      <StaticQuery\n        query={graphql`\n          {\n            allComponentMetadata {\n              edges {\n                node {\n                  displayName\n                  composes\n                  description {\n                    id\n                  }\n                  props {\n                    id\n                    name\n                    docblock\n                    defaultValue {\n                      value\n                      computed\n                    }\n                    type {\n                      name\n                      value\n                      raw\n                    }\n                    required\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={(data) => {\n          const componentDocs = this.getDocsForComponent(data)\n          if (!componentDocs)\n            return (\n              <div>\n                <p>\n                  The properties table for this component can’t be rendered at\n                  the moment, due to a bug.\n                </p>\n              </div>\n            )\n          return (\n            <>\n              <div className=\"Content\">\n                <h2 className=\"h2\">\n                  <code className=\"code\">\n                    {this.props.rename || componentDocs.displayName}\n                  </code>{' '}\n                  Props\n                </h2>\n                {componentDocs &&\n                  componentDocs.composes &&\n                  componentDocs.composes.length > 0 && (\n                    <div className=\"PropTypesTable-composes\">\n                      <p>\n                        <strong>This component composes </strong>\n                        {componentDocs.composes.map((filePath) => (\n                          <code key={filePath}>\n                            {filePath.slice(filePath.indexOf('/') + 1)}\n                          </code>\n                        ))}\n                      </p>\n                    </div>\n                  )}\n              </div>\n\n              {componentDocs.props.map((prop) => {\n                const isArrayOf = this.isArrayOf(prop)\n                // Figure out what makes sense here.\n                return (\n                  <PropTypeWrapper key={prop.name}>\n                    <PropTypeHeading\n                      name={prop.name}\n                      required={prop.required}\n                      defaultValue={prop.defaultValue}\n                      type={prop.type || {}}\n                      isArrayOf={isArrayOf}\n                    />\n                    {prop.docblock ? (\n                      <PropTypeDescription>{prop.docblock}</PropTypeDescription>\n                    ) : null}\n                  </PropTypeWrapper>\n                )\n              })}\n            </>\n          )\n        }}\n      />\n    )\n  }\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rohan.vats/code/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Dialog`}</inlineCode>{` component is used to show content on top of an overlay.\nIt blocks any interaction with the page — until the overlay is clicked, or a close action is triggered.`}</p>\n    <h3>{`When to use`}</h3>\n    <p>{`When you require your user to interact with you app and\ndon’t want your users to jump to a different page and break their workflow.`}</p>\n    <p>{`You should also use a dialog in cases where you need to ask for confirmation\nfrom the user before doing a lengthy or dangerous action.\nThis could be a deletion of some sorts or initiating a lengthy download.`}</p>\n    <h3>{`Terminology`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://blueprintjs.com/docs/versions/2/#core/components/dialog\"\n      }}>{`BlueprintJS`}</a>{` pointed out in their documentation that “modal” is a misnomer for “dialog”.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The term “modal” is sometimes used to mean “dialog”, but this is a misnomer.\nModal is an adjective that describes parts of a UI.\nAn element is considered modal if it `}<a parentName=\"p\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Modal_window\"\n        }}>{`blocks interaction with the rest of the application`}</a>{`.\nWe use the term “dialog” to avoid confusion with the adjective.`}</p>\n    </blockquote>\n    <h3>{`Focus Management`}</h3>\n    <p>{`When opening a `}<inlineCode parentName=\"p\">{`Dialog`}</inlineCode>{`, focus will be brought inside the `}<inlineCode parentName=\"p\">{`Dialog`}</inlineCode>{`\nWhen using both the cancel and confirm button, the cancel button will get focus first.`}</p>\n    <p>{`When closing the Dialog, focus will be brought back to the element that was focused before opening the `}<inlineCode parentName=\"p\">{`Dialog`}</inlineCode>{`.\nThis is normally the button that triggered the `}<inlineCode parentName=\"p\">{`Dialog`}</inlineCode>{`.`}</p>\n    <h2>{`Default dialog example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ isShown: false }}>\n  {({ state, setState }) => (\n    <Pane>\n      <Dialog\n        isShown={state.isShown}\n        title=\"Dialog title\"\n        onCloseComplete={() => setState({ isShown: false })}\n        confirmLabel=\"Custom Label\"\n      >\n        Dialog content\n      </Dialog>\n\n      <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Default with a danger intent`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`intent`}</inlineCode>{` prop determines the appearance of the confirm button, `}<inlineCode parentName=\"p\">{`danger`}</inlineCode>{` is red.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ isShown: false }}>\n  {({ state, setState }) => (\n    <Pane>\n      <Dialog\n        isShown={state.isShown}\n        title=\"Danger intent\"\n        intent=\"danger\"\n        onCloseComplete={() => setState({ isShown: false })}\n        confirmLabel=\"Delete Something\"\n      >\n        Dialog content\n      </Dialog>\n\n      <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Confirm button with loading confirmation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component\n  initialState={{ isShown: false, isLoading: false }}\n  didUpdate={({ state, setState }) => {\n    if (state.isLoading === true) {\n      window.setTimeout(() => {\n        setState({\n          isShown: false\n        })\n      }, 2000)\n    }\n  }}\n>\n  {({ state, setState }) => (\n    <Pane>\n      <Dialog\n        isShown={state.isShown}\n        title=\"Loading confirmation\"\n        onCloseComplete={() => setState({ isShown: false, isLoading: false })}\n        isConfirmLoading={state.isLoading}\n        onConfirm={() => setState({ isLoading: true })}\n        confirmLabel={state.isLoading ? 'Loading...' : 'Confirm Loading'}\n      >\n        Dialog content\n      </Dialog>\n\n      <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Internal scrolling`}</h2>\n    <p>{`When content makes the dialog height greater than the available space in the viewport,\nthe content area will become scrollable\nIt will add a symmetric offset on the top and bottom — based on the topOffset prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ isShown: false }}>\n  {({ state, setState }) => (\n    <Pane>\n      <Dialog\n        isShown={state.isShown}\n        title=\"Internal scrolling\"\n        onCloseComplete={() => setState({ isShown: false })}\n      >\n        <Pane height={1800} width=\"100%\" backgroundColor=\"#ddd\" />\n      </Dialog>\n\n      <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Self managed close`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ isShown: false }}>\n  {({ state, setState }) => (\n    <Pane>\n      <Dialog\n        isShown={state.isShown}\n        title=\"Self managed close\"\n        onCloseComplete={() => setState({ isShown: false })}\n      >\n        {({ close }) => (\n          <Pane>\n            <Paragraph>Manage your own buttons and close interaction</Paragraph>\n            <Button marginTop={16} onClick={close}>\n              Self Managed Close\n            </Button>\n          </Pane>\n        )}\n      </Dialog>\n\n      <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Remove default footer`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`hasFooter`}</inlineCode>{` prop to show or hide the footer.\nThis will hide the confirm and cancel buttons.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ isShown: false }}>\n  {({ state, setState }) => (\n    <Pane>\n      <Dialog\n        isShown={state.isShown}\n        title=\"No footer\"\n        onCloseComplete={() => setState({ isShown: false })}\n        hasFooter={false}\n      >\n        No footer\n      </Dialog>\n\n      <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Remove default header`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`hasHeader`}</inlineCode>{` prop to show or hide the header.\nThis will hide both the close icon button as the title.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ isShown: false }}>\n  {({ state, setState }) => (\n    <Pane>\n      <Dialog\n        isShown={state.isShown}\n        onCloseComplete={() => setState({ isShown: false })}\n        hasHeader={false}\n      >\n        No header\n      </Dialog>\n\n      <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Remove default footer and header`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`hasFooter`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`hasHeader`}</inlineCode>{` props to show or hide the footer and header.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ isShown: false }}>\n  {({ state, setState }) => (\n    <Pane>\n      <Dialog\n        isShown={state.isShown}\n        onCloseComplete={() => setState({ isShown: false })}\n        hasFooter={false}\n        hasHeader={false}\n      >\n        Completely custom dialog\n      </Dialog>\n\n      <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <h2>{`Preserve scroll position and prevent body scrolling`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`preventBodyScrolling`}</inlineCode>{` prop to disable scrolling outside the dialog.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Component initialState={{ isShown: false }}>\n  {({ state, setState }) => (\n    <Pane paddingY='40vh'>\n      <Dialog\n        isShown={state.isShown}\n        onCloseComplete={() => setState({ isShown: false })}\n        preventBodyScrolling\n      >\n        Scroll-locked body\n      </Dialog>\n\n      <Button onClick={() => setState({ isShown: true })}>Show Dialog</Button>\n    </Pane>\n  )}\n</Component>\n`}</code></pre>\n    <PropsTable of=\"Dialog\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { Location, navigate } from '@reach/router'\nimport { Button, IconButton, Tooltip, ArrowLeftIcon } from 'molecular-ui'\nimport IA from '../IA'\nimport DocsMDXProvider from './DocsMDXProvider'\nimport TopBar from './TopBar'\nimport Layout from './Layout'\nimport OverviewItem from './OverviewItem'\nimport PageFooter from './PageFooter'\n\nconst flatItems = [\n  ...IA.foundation.items.map(item => {\n    return {\n      ...item,\n      related: [\n        ...(item.related || []),\n        ...IA.foundation.items.map(x => x.id).filter(id => id !== item.id)\n      ]\n    }\n  }),\n  ...IA.components.items.reduce((acc, curr) => {\n    return [\n      ...acc,\n      ...curr.items.map(item => {\n        return {\n          ...item,\n          related: [\n            ...(item.related || []),\n            ...curr.items.map(item => item.id).filter(id => id !== item.id)\n          ]\n        }\n      })\n    ]\n  }, [])\n]\n\n/**\n * Used for component pages.\n */\nclass Page extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object.isRequired\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo)\n  }\n\n  getMetaInfo = () => {\n    const id = this.props.location.pathname.split('/')[2]\n    return flatItems.find(item => item.id === id)\n  }\n\n  getRelatedItems = metaInfo => {\n    return (metaInfo.related || []).map(id => {\n      return flatItems.find(item => item.id === id)\n    })\n  }\n\n  render() {\n    const metaInfo = this.getMetaInfo()\n    if (!metaInfo) return null\n    const relatedItems = this.getRelatedItems(metaInfo)\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>{metaInfo.name} · MolecularUI</title>\n          <meta\n            property=\"og:title\"\n            content={`${metaInfo.name} · MolecularUI`}\n          />\n          <meta\n            property=\"twitter:title\"\n            content={`${metaInfo.name} · MolecularUI`}\n          />\n        </Helmet>\n        <div>\n          <TopBar />\n          <main>\n            <article className=\"MDXPage\">\n              <header className=\"MDXPage-header\">\n                <div className=\"bg-tint1\">\n                  <div className=\"MDXPage-headerContent Container Container--narrow\">\n                    <div className=\"MDXPage-headerContentLeft\">\n                      <Tooltip content=\"Back to Overview\">\n                        <IconButton\n                          autoFocus\n                          onClick={() => {\n                            // Non-ideal, but Tooltip doesn't play nice when using is={Link}\n                            navigate('/components')\n                          }}\n                          marginLeft={-54}\n                          marginRight={16}\n                          display=\"inline-flex\"\n                          icon={ArrowLeftIcon}\n                          height={40}\n                        />\n                      </Tooltip>\n\n                      <h1>{metaInfo.name}</h1>\n                    </div>\n\n                    <Button\n                      is=\"a\"\n                      height={40}\n                      href={metaInfo.github}\n                      target=\"_blank\"\n                    >\n                      View on GitHub\n                    </Button>\n                  </div>\n                </div>\n              </header>\n              <div\n                className=\"Container Container--narrow\"\n                style={{ marginBottom: 120 }}\n              >\n                <DocsMDXProvider>{this.props.children}</DocsMDXProvider>\n              </div>\n            </article>\n\n            {relatedItems.length > 0 && (\n              <div\n                className=\"Overview-group Container Container--narrow\"\n                style={{ marginBottom: 120 }}\n              >\n                <h3 className=\"Overview-groupTitle\">Related</h3>\n                <div className=\"Overview-groupItems\">\n                  {relatedItems.map(item => {\n                    return (\n                      <OverviewItem\n                        key={item.name}\n                        id={item.id}\n                        image={item.image}\n                      >\n                        {item.name}\n                      </OverviewItem>\n                    )\n                  })}\n                </div>\n              </div>\n            )}\n\n            <div\n              className=\"Container Container--narrow\"\n              style={{ marginBottom: 120 }}\n            >\n              <Button\n                is={Link}\n                to=\"/components\"\n                display=\"inline-flex\"\n                iconBefore={ArrowLeftIcon}\n                height={40}\n              >\n                Back to Overview\n              </Button>\n            </div>\n          </main>\n        </div>\n        <PageFooter />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default class PageContainer extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Location>\n          {({ location }) => {\n            return <Page location={location} {...this.props} />\n          }}\n        </Location>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}