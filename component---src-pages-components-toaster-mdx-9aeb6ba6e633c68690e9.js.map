{"version":3,"sources":["webpack:///./src/pages/components/toaster.mdx","webpack:///./src/components/Page.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","flatItems","IA","foundation","items","map","item","related","x","id","filter","reduce","acc","curr","Page","getMetaInfo","location","pathname","split","find","getRelatedItems","metaInfo","componentDidCatch","error","errorInfo","console","render","this","relatedItems","Fragment","name","property","content","className","autoFocus","onClick","navigate","marginLeft","marginRight","display","icon","ArrowLeftIcon","height","is","href","github","target","style","marginBottom","children","length","key","image","Link","to","iconBefore","React","Component","PageContainer"],"mappings":"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","file":"component---src-pages-components-toaster-mdx-9aeb6ba6e633c68690e9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rohan.vats/code/evergreen/docs/src/components/Page.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`toaster`}</inlineCode>{` is used to show toasts (alerts) on top of an overlay.\nThe toasts will close themselves when the close button is clicked,\nor after a timeout — the default is 5 seconds.`}</p>\n    <h3>{`When To Use`}</h3>\n    <p>{`When you want to give feedback to your users about a action they take.\nOften this is in the form of creation or deletion.`}</p>\n    <h3>{`Implementation details`}</h3>\n    <p>{`A toast is simply a wrapper around the `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{` component and has the same kind of types as an alert.\nThe following types are available:`}</p>\n    <h3>{`Types of toasts`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`info`}</strong>{`: `}<inlineCode parentName=\"li\">{`toaster.notify()`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`success`}</strong>{`: `}<inlineCode parentName=\"li\">{`toaster.success()`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`warning`}</strong>{`: `}<inlineCode parentName=\"li\">{`toaster.warning()`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`danger`}</strong>{`: `}<inlineCode parentName=\"li\">{`toaster.danger()`}</inlineCode></li>\n    </ul>\n    <h3>{`Closing all toasts`}</h3>\n    <p>{`In some situations toasts might become outdated before they expire.\nFor example when showing a toast in a setup flow, canceling out of that setup flow might make the toast irrelevant.`}</p>\n    <p>{`In those situations you can use `}<inlineCode parentName=\"p\">{`toaster.closeAll()`}</inlineCode>{` to close all open toasts.`}</p>\n    <h2>{`Keep around when mouse over`}</h2>\n    <p>{`When the use hovers (mouse overs) the toast it will stop the countdown timer and the toast\nwill stay alive as long as the toast is being hovered.`}</p>\n    <h3>{`Self managed`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`toaster`}</inlineCode>{` manages state itself — and uses `}<inlineCode parentName=\"p\">{`ReactDOM`}</inlineCode>{` to show toasts.\nThe `}<inlineCode parentName=\"p\">{`toaster`}</inlineCode>{` is an instance of the `}<inlineCode parentName=\"p\">{`Toaster`}</inlineCode>{` class.`}</p>\n    <h2>{`Notify`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button\n  onClick={() => toaster.notify('MolecularUI is a open-source design system')}\n>\n  Notify\n</Button>\n`}</code></pre>\n    <h2>{`Success`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button onClick={() => toaster.success('Your source is now sending data')}>\n  Success\n</Button>\n`}</code></pre>\n    <h2>{`Warning`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button onClick={() => toaster.warning('Changes will affect all Warehouses')}>\n  Warning\n</Button>\n`}</code></pre>\n    <h2>{`Danger`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button\n  onClick={() =>\n    toaster.danger('Something went wrong trying to create your audience')\n  }\n>\n  Danger\n</Button>\n`}</code></pre>\n    <h2>{`Close all`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button onClick={() => toaster.closeAll()}>Close All</Button>\n`}</code></pre>\n    <h2>{`Adding a description`}</h2>\n    <p>{`A `}<inlineCode parentName=\"p\">{`description`}</inlineCode>{` is used as the children of the `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{` component.\nThe description can be a React node.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button\n  onClick={() =>\n    toaster.success('Your source is now sending data', {\n      description: 'Connect your source to a destination to receive data.',\n    })\n  }\n>\n  Success with description\n</Button>\n`}</code></pre>\n    <h2>{`Toasts with custom duration`}</h2>\n    <p>{`It is possible to add a custom duration when showing a toast.\nThe default `}<inlineCode parentName=\"p\">{`duration`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`5`}</inlineCode>{` seconds.\nThe `}<inlineCode parentName=\"p\">{`duration`}</inlineCode>{` property is in seconds — not milliseconds.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button\n  onClick={() =>\n    toaster.success('Stick around for 10 seconds', {\n      duration: 10,\n    })\n  }\n>\n  10 Seconds\n</Button>\n`}</code></pre>\n    <h2>{`Unique toasts`}</h2>\n    <p>{`There are cases when it's only one toast with the same content can be shown at a time.\nPassing a unique ID via `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` property allows MolecularUI to close all previous toasts with the same ID, before showing a new one.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button\n  onClick={() =>\n    toaster.warning('Only one toaster will be shown', {\n      id: 'forbidden-action',\n    })\n  }\n>\n  Show only one toaster\n</Button>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { Location, navigate } from '@reach/router'\nimport { Button, IconButton, Tooltip, ArrowLeftIcon } from 'molecular-ui'\nimport IA from '../IA'\nimport DocsMDXProvider from './DocsMDXProvider'\nimport TopBar from './TopBar'\nimport Layout from './Layout'\nimport OverviewItem from './OverviewItem'\nimport PageFooter from './PageFooter'\n\nconst flatItems = [\n  ...IA.foundation.items.map(item => {\n    return {\n      ...item,\n      related: [\n        ...(item.related || []),\n        ...IA.foundation.items.map(x => x.id).filter(id => id !== item.id)\n      ]\n    }\n  }),\n  ...IA.components.items.reduce((acc, curr) => {\n    return [\n      ...acc,\n      ...curr.items.map(item => {\n        return {\n          ...item,\n          related: [\n            ...(item.related || []),\n            ...curr.items.map(item => item.id).filter(id => id !== item.id)\n          ]\n        }\n      })\n    ]\n  }, [])\n]\n\n/**\n * Used for component pages.\n */\nclass Page extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object.isRequired\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo)\n  }\n\n  getMetaInfo = () => {\n    const id = this.props.location.pathname.split('/')[2]\n    return flatItems.find(item => item.id === id)\n  }\n\n  getRelatedItems = metaInfo => {\n    return (metaInfo.related || []).map(id => {\n      return flatItems.find(item => item.id === id)\n    })\n  }\n\n  render() {\n    const metaInfo = this.getMetaInfo()\n    if (!metaInfo) return null\n    const relatedItems = this.getRelatedItems(metaInfo)\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>{metaInfo.name} · MolecularUI</title>\n          <meta\n            property=\"og:title\"\n            content={`${metaInfo.name} · MolecularUI`}\n          />\n          <meta\n            property=\"twitter:title\"\n            content={`${metaInfo.name} · MolecularUI`}\n          />\n        </Helmet>\n        <div>\n          <TopBar />\n          <main>\n            <article className=\"MDXPage\">\n              <header className=\"MDXPage-header\">\n                <div className=\"bg-tint1\">\n                  <div className=\"MDXPage-headerContent Container Container--narrow\">\n                    <div className=\"MDXPage-headerContentLeft\">\n                      <Tooltip content=\"Back to Overview\">\n                        <IconButton\n                          autoFocus\n                          onClick={() => {\n                            // Non-ideal, but Tooltip doesn't play nice when using is={Link}\n                            navigate('/components')\n                          }}\n                          marginLeft={-54}\n                          marginRight={16}\n                          display=\"inline-flex\"\n                          icon={ArrowLeftIcon}\n                          height={40}\n                        />\n                      </Tooltip>\n\n                      <h1>{metaInfo.name}</h1>\n                    </div>\n\n                    <Button\n                      is=\"a\"\n                      height={40}\n                      href={metaInfo.github}\n                      target=\"_blank\"\n                    >\n                      View on GitHub\n                    </Button>\n                  </div>\n                </div>\n              </header>\n              <div\n                className=\"Container Container--narrow\"\n                style={{ marginBottom: 120 }}\n              >\n                <DocsMDXProvider>{this.props.children}</DocsMDXProvider>\n              </div>\n            </article>\n\n            {relatedItems.length > 0 && (\n              <div\n                className=\"Overview-group Container Container--narrow\"\n                style={{ marginBottom: 120 }}\n              >\n                <h3 className=\"Overview-groupTitle\">Related</h3>\n                <div className=\"Overview-groupItems\">\n                  {relatedItems.map(item => {\n                    return (\n                      <OverviewItem\n                        key={item.name}\n                        id={item.id}\n                        image={item.image}\n                      >\n                        {item.name}\n                      </OverviewItem>\n                    )\n                  })}\n                </div>\n              </div>\n            )}\n\n            <div\n              className=\"Container Container--narrow\"\n              style={{ marginBottom: 120 }}\n            >\n              <Button\n                is={Link}\n                to=\"/components\"\n                display=\"inline-flex\"\n                iconBefore={ArrowLeftIcon}\n                height={40}\n              >\n                Back to Overview\n              </Button>\n            </div>\n          </main>\n        </div>\n        <PageFooter />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default class PageContainer extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Location>\n          {({ location }) => {\n            return <Page location={location} {...this.props} />\n          }}\n        </Location>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}