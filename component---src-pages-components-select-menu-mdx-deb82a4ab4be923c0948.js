(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{"Ob+p":function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var a=n("dI71"),l=n("mXGw"),o=n.n(l),i=n("Wbzz"),c=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e=this.props.children;return o.a.createElement("div",{className:"PropTypeWrapper"},e)},t}(l.PureComponent),s=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e=this.props.children;return o.a.createElement("div",{className:"PropTypeDescription"},e)},t}(l.PureComponent),r=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.defaultValue,n=e.name,a=e.required,l=e.type,i=e.isArrayOf;return o.a.createElement("div",{className:"PropTypeHeading"},o.a.createElement("code",null,o.a.createElement("span",{className:"PropTypeHeading-name"},n),o.a.createElement("span",{className:"PropTypeHeading-propType"},function e(t){var n=t.name,a=t.value;switch(n){case"enum":return a.map((function(e){return e.value})).join(" | ");case"union":return a.map((function(t){return e(t)})).join(" | ");case"arrayOf":return"Array<"+e(a)+">";case"shape":return"object"==typeof a?"{ "+Object.keys(a).map((function(t){return t+(a[t].required?"":"?")+": "+e(a[t])})).join(", ")+" }":a;default:return n}}(l)),i&&o.a.createElement("span",{className:"PropTypeHeading-arrayOf"},i)),t?o.a.createElement("code",{className:"PropTypeHeading-defaultValue"}," ","= ",t.value):null,a?o.a.createElement("span",{className:"PropTypeHeading-required"},"required"):null)},t}(l.PureComponent),p=function(e){function t(){for(var t,n=arguments.length,a=new Array(n),l=0;l<n;l++)a[l]=arguments[l];return(t=e.call.apply(e,[this].concat(a))||this).isArrayOf=function(e){if(e.type&&"arrayOf"===e.type.name&&"object"==typeof e.type.value&&"string"==typeof e.type.value.raw)return e.type.value.raw},t.getDocsForComponent=function(e){var n=e.allComponentMetadata.edges.find((function(e){return e.node.displayName===t.props.of}));return n?n.node:null},t}return Object(a.a)(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(i.b,{query:"3894714669",render:function(t){var n=e.getDocsForComponent(t);return n?o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"Content"},o.a.createElement("h2",{className:"h2"},o.a.createElement("code",{className:"code"},e.props.rename||n.displayName)," ","Props"),n&&n.composes&&n.composes.length>0&&o.a.createElement("div",{className:"PropTypesTable-composes"},o.a.createElement("p",null,o.a.createElement("strong",null,"This component composes "),n.composes.map((function(e){return o.a.createElement("code",{key:e},e.slice(e.indexOf("/")+1))}))))),n.props.map((function(t){var n=e.isArrayOf(t);return o.a.createElement(c,{key:t.name},o.a.createElement(r,{name:t.name,required:t.required,defaultValue:t.defaultValue,type:t.type||{},isArrayOf:n}),t.docblock?o.a.createElement(s,null,t.docblock):null)}))):o.a.createElement("div",null,o.a.createElement("p",null,"The properties table for this component canâ€™t be rendered at the moment, due to a bug."))}})},t}(l.PureComponent)},fm4H:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n("zLVn"),l=(n("mXGw"),n("7ljp")),o=n("uVCN"),i=(n("Vm3X"),n("Ob+p")),c={},s={_frontmatter:c},r=o.a;function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)(r,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",null,"Introduction"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"SelectMenu")," component is an advanced interaction pattern which allows selection of multiple items from a dropdown list.\nIt can be used as a substitute for the native multiple select element."),Object(l.b)("h3",null,"Implementation details"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"SelectMenu")," builds on top of the ",Object(l.b)("inlineCode",{parentName:"p"},"Popover")," component\nand uses ",Object(l.b)("inlineCode",{parentName:"p"},"react-tiny-virtual-list")," for the rendering of the virtualized list of options."),Object(l.b)("h2",null,"Multiselect"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"SelectMenu")," is unopinionated in how many items are selected in the list.\nPass an array to the ",Object(l.b)("inlineCode",{parentName:"p"},"selected")," prop to select more items."),Object(l.b)("h2",null,"Close on select"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"SelectMenu")," by default will stay open when an option is selected.\nThis can be configured so that the menu closes on selection.\nThis will not apply for Multiselect menus."),Object(l.b)("h2",null,"Options prop structure"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-js",metastring:"static",static:!0}),"const options = [\n  {\n    label: 'String',\n    value: 'String or Number'\n  }\n]\n")),Object(l.b)("h2",null,"Single selected item"),Object(l.b)("p",null,"This example shows basic usage with a single selected item."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Component initialState={{ selected: null }}>\n  {({ setState, state }) => (\n    <SelectMenu\n      title=\"Select name\"\n      options={\n        ['Apple', 'Apricot', 'Banana', 'Cherry', 'Cucumber']\n          .map(label => ({ label, value: label }))\n      }\n      selected={state.selected}\n      onSelect={item => setState({ selected: item.value })}\n    >\n      <Button>{state.selected || 'Select name...'}</Button>\n    </SelectMenu>\n  )}\n</Component>\n")),Object(l.b)("h2",null,"Remove title and filter"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"hasFilter={false}"),":  to remove the search input filter."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"hasTitle={false}"),":  to remove the title from the popover.")),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Component initialState={{ selected: null }}>\n  {({ setState, state }) => (\n    <SelectMenu\n      hasTitle={false}\n      hasFilter={false}\n      title=\"Select name\"\n      options={\n        ['Apple', 'Apricot', 'Banana', 'Cherry', 'Cucumber']\n          .map(label => ({ label, value: label }))\n      }\n      selected={state.selected}\n      onSelect={item => setState({ selected: item.value })}\n    >\n      <Button>{state.selected || 'Select name...'}</Button>\n    </SelectMenu>\n  )}\n</Component>\n")),Object(l.b)("h2",null,"Change the height and width"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Component initialState={{ selected: null }}>\n  {({ setState, state }) => (\n    <SelectMenu\n      height={140}\n      width={180}\n      hasTitle={false}\n      hasFilter={false}\n      title=\"Select name\"\n      options={\n        ['Apple', 'Apricot', 'Banana', 'Cherry', 'Cucumber']\n          .map(label => ({ label, value: label }))\n      }\n      selected={state.selected}\n      onSelect={item => setState({ selected: item.value })}\n    >\n      <Button>{state.selected || 'Select name...'}</Button>\n    </SelectMenu>\n  )}\n</Component>\n")),Object(l.b)("h2",null,"Change the position of the popover"),Object(l.b)("p",null,"Available positions:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Position.TOP")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Position.TOP_LEFT")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Position.TOP_RIGHT")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Position.BOTTOM")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Position.BOTTOM_LEFT")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Position.BOTTOM_RIGHT"))),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Component initialState={{ selected: null }}>\n  {({ setState, state }) => (\n    <SelectMenu\n      position={Position.TOP}\n      title=\"Select name\"\n      options={\n        ['Apple', 'Apricot', 'Banana', 'Cherry', 'Cucumber']\n          .map(label => ({ label, value: label }))\n      }\n      selected={state.selected}\n      onSelect={item => setState({ selected: item.value })}\n    >\n      <Button>{state.selected || 'Select name...'}</Button>\n    </SelectMenu>\n  )}\n</Component>\n")),Object(l.b)("h2",null,"Empty view"),Object(l.b)("p",null,"It's possible to display a custom empty view instead of options list via ",Object(l.b)("inlineCode",{parentName:"p"},"emptyView"),", when there are no properties supplied.\nNote that empty view won't be shown when options are being filtered and there are no search results."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<SelectMenu\n  title="Empty view"\n  options={[]}\n  emptyView={(\n    <Pane height="100%" display="flex" alignItems="center" justifyContent="center">\n      <Text size={300}>No options found</Text>\n    </Pane>\n  )}\n>\n  <Button>Select option...</Button>\n</SelectMenu>\n')),Object(l.b)("p",null,"It's also possible to close ",Object(l.b)("inlineCode",{parentName:"p"},"<SelectMenu>")," from within empty view:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<SelectMenu\n  title="Empty view"\n  options={[]}\n  emptyView={({ close }) => (\n    <Pane height="100%" display="flex" alignItems="center" justifyContent="center">\n      <Button onClick={close}>Close</Button>\n    </Pane>\n  )}\n>\n  <Button>Select option...</Button>\n</SelectMenu>\n')),Object(l.b)("h2",null,"Menu with icons"),Object(l.b)("p",null,"It's possible to include icons in the menu list."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<SelectMenu\n  title=\"Options with icons\"\n  options={[\n    { label: 'Apple', value: 'Apple', icon: 'https://upload.wikimedia.org/wikipedia/commons/d/d2/Malus-Boskoop_organic.jpg' },\n    { label: 'Banana', value: 'Banana', icon: 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/44/Bananas_white_background_DS.jpg/2560px-Bananas_white_background_DS.jpg' },\n  ]}\n>\n  <Button>Select option...</Button>\n</SelectMenu>\n")),Object(l.b)("h2",null,"Multiselect with deselect example"),Object(l.b)("p",null,"This example shows usage with multiple selected items."),Object(l.b)("p",null,"This pattern is only an example.\nSelected values and the formatting of their names should be managed wherever you choose to manage state.\nThe ",Object(l.b)("inlineCode",{parentName:"p"},"onDeselect")," method is provided to assist with this."),Object(l.b)("p",null,"As users click on selected values to remove them, you can update state."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Component\n  initialState={{\n    options: ['Apple', 'Apricot', 'Banana', 'Cherry', 'Cucumber']\n          .map(label => ({ label, value: label })),\n    selected: []\n  }}\n>\n  {({ state, setState }) => (\n    <SelectMenu\n      isMultiSelect\n      title=\"Select multiple names\"\n      options={state.options}\n      selected={state.selected}\n      onSelect={item => {\n        const selected = [...state.selected, item.value]\n        const selectedItems = selected\n        const selectedItemsLength = selectedItems.length\n        let selectedNames = ''\n        if (selectedItemsLength === 0) {\n          selectedNames = ''\n        } else if (selectedItemsLength === 1) {\n          selectedNames = selectedItems.toString()\n        } else if (selectedItemsLength > 1) {\n          selectedNames = selectedItemsLength.toString() + ' selected...'\n        }\n        setState({\n          selected,\n          selectedNames\n        })\n      }}\n      onDeselect={item => {\n        const deselectedItemIndex = state.selected.indexOf(item.value)\n        const selectedItems = state.selected.filter(\n          (_item, i) => i !== deselectedItemIndex\n        )\n        const selectedItemsLength = selectedItems.length\n        let selectedNames = ''\n        if (selectedItemsLength === 0) {\n          selectedNames = ''\n        } else if (selectedItemsLength === 1) {\n          selectedNames = selectedItems.toString()\n        } else if (selectedItemsLength > 1) {\n          selectedNames = selectedItemsLength.toString() + ' selected...'\n        }\n        setState({ selected: selectedItems, selectedNames })\n      }}\n    >\n      <Button>{state.selectedNames || 'Select multiple...'}</Button>\n    </SelectMenu>\n  )}\n</Component>\n")),Object(l.b)("h2",null,"onFilterChange example"),Object(l.b)("p",null,"This example shows basic usage with onFocusChange."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Component initialState={{ selected: null }}>\n  {({ setState, state }) => (\n    <Pane>\n    <Pane marginBottom={8}>\n      <Text>Filter value: {state.filter}</Text>\n    </Pane>\n    <SelectMenu\n      title=\"Select name\"\n      onFilterChange={filter => setState({filter})}\n      options={\n        ['Apple', 'Apricot', 'Banana', 'Cherry', 'Cucumber']\n          .map(label => ({ label, value: label }))\n      }\n      selected={state.selected}\n      onSelect={item => setState({ selected: item.value })}\n    >\n      <Button>{state.selected || 'Select name...'}</Button>\n    </SelectMenu>\n    </Pane>\n  )}\n\n</Component>\n")),Object(l.b)("h2",null,"Disabled option example"),Object(l.b)("p",null,"This example shows basic usage for disabling some options. Options that are disabled cannot be clicked and their labels are muted."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Component initialState={{ selected: null }}>\n  {({ setState, state }) => (\n    <Pane>\n    <SelectMenu\n      title="Select Option"\n      options={\n        [{ label: "Disabled", value: "disabled", disabled: true }, { label: "Not Disabled", value: "not-disabled" }]\n      }\n      selected={state.selected}\n      onSelect={item => setState({ selected: item.value })}\n    >\n      <Button>{state.selected || \'Select name...\'}</Button>\n    </SelectMenu>\n    </Pane>\n  )}\n\n</Component>\n')),Object(l.b)("h2",null,"Custom Title Example"),Object(l.b)("p",null,"This example shows how one should use titleView to pass in a custom title."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Component initialState={{ selected: null }}>\n  {({ setState, state }) => (\n    <Pane>\n    <SelectMenu\n      title="Select Option"\n      tooltipContent="Choose one of the options below."\n      titleView={({ close, title, headerHeight }) => {\n        return (\n          <Pane\n            display="flex"\n            alignItems="center"\n            borderBottom="default"\n            padding={8}\n            height={headerHeight}\n            boxSizing="border-box"\n          >\n            <Pane flex="1" display="flex" alignItems="center">\n              <Heading size={400}>{title}</Heading>\n                <Tooltip content="Pick one of the options below">\n                  <HelpIcon size={12} marginLeft={4} />\n                </Tooltip>\n            </Pane>\n            <IconButton\n              icon={CrossIcon}\n              appearance="minimal"\n              height={24}\n              onClick={close}\n            />\n          </Pane>\n        )\n      }}\n      options={\n        [{ label: "Option 1", value: "option-1"}, { label: "Option 2", value: "option-2" }]\n      }\n      selected={state.selected}\n      onSelect={item => setState({ selected: item.value })}\n    >\n      <Button>{state.selected || \'Select name...\'}</Button>\n    </SelectMenu>\n    </Pane>\n  )}\n\n</Component>\n')),Object(l.b)("h2",null,"Custom Filter PlaceHolder and Icon Example"),Object(l.b)("p",null,"It's possible to change the filter placeholder and filter icon through the ",Object(l.b)("inlineCode",{parentName:"p"},"filterPlaceholder")," and ",Object(l.b)("inlineCode",{parentName:"p"},"filterIcon")," props."),Object(l.b)("p",null,"Note that the icon can be one found in Segment's various ",Object(l.b)("a",Object.assign({parentName:"p"},{href:"https://evergreen.segment.com/components/icons"}),"icons"),", or ",Object(l.b)("inlineCode",{parentName:"p"},"none"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Component initialState={{ selected: null }}>\n  {({ setState, state }) => (\n    <SelectMenu\n      title=\"Select name\"\n      options={\n        ['Comedy', 'Drama', 'Fantasy', 'Family', 'Action']\n          .map(label => ({ label, value: label }))\n      }\n      selected={state.selected}\n      onSelect={item => setState({ selected: item.value })}\n      filterPlaceholder={\"Choose a genre\"}\n      filterIcon={FilmIcon}\n    >\n      <Button>{state.selected || 'Select name...'}</Button>\n    </SelectMenu>\n  )}\n</Component>\n")),Object(l.b)(i.a,{of:"SelectMenu",mdxType:"PropsTable"}))}p.isMDXComponent=!0},uVCN:function(e,t,n){"use strict";n.d(t,"a",(function(){return w}));var a=n("dI71"),l=n("rePB"),o=n("KQm4"),i=n("mXGw"),c=n.n(i),s=n("qhky"),r=n("Wbzz"),p=n("YwZP"),u=n("ruUZ"),m=n("Onqc"),b=n("vMZD"),d=n("552S"),h=n("fUAp"),O=n("hPyG"),f=n("zngv"),g=n("7oih"),j=n("Whaq"),v=n("nD8F");function y(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function S(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?y(Object(n),!0).forEach((function(t){Object(l.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var N=[].concat(Object(o.a)(h.a.foundation.items.map((function(e){return S(S({},e),{},{related:[].concat(Object(o.a)(e.related||[]),Object(o.a)(h.a.foundation.items.map((function(e){return e.id})).filter((function(t){return t!==e.id}))))})}))),Object(o.a)(h.a.components.items.reduce((function(e,t){return[].concat(Object(o.a)(e),Object(o.a)(t.items.map((function(e){return S(S({},e),{},{related:[].concat(Object(o.a)(e.related||[]),Object(o.a)(t.items.map((function(e){return e.id})).filter((function(t){return t!==e.id}))))})}))))}),[]))),C=function(e){function t(){for(var t,n=arguments.length,a=new Array(n),l=0;l<n;l++)a[l]=arguments[l];return(t=e.call.apply(e,[this].concat(a))||this).getMetaInfo=function(){var e=t.props.location.pathname.split("/")[2];return N.find((function(t){return t.id===e}))},t.getRelatedItems=function(e){return(e.related||[]).map((function(e){return N.find((function(t){return t.id===e}))}))},t}Object(a.a)(t,e);var n=t.prototype;return n.componentDidCatch=function(e,t){console.error(e,t)},n.render=function(){var e=this.getMetaInfo();if(!e)return null;var t=this.getRelatedItems(e);return c.a.createElement(c.a.Fragment,null,c.a.createElement(s.a,null,c.a.createElement("title",null,e.name," Â· MolecularUI"),c.a.createElement("meta",{property:"og:title",content:e.name+" Â· MolecularUI"}),c.a.createElement("meta",{property:"twitter:title",content:e.name+" Â· MolecularUI"})),c.a.createElement("div",null,c.a.createElement(f.a,null),c.a.createElement("main",null,c.a.createElement("article",{className:"MDXPage"},c.a.createElement("header",{className:"MDXPage-header"},c.a.createElement("div",{className:"bg-tint1"},c.a.createElement("div",{className:"MDXPage-headerContent Container Container--narrow"},c.a.createElement("div",{className:"MDXPage-headerContentLeft"},c.a.createElement(u.a,{content:"Back to Overview"},c.a.createElement(m.a,{autoFocus:!0,onClick:function(){Object(p.navigate)("/components")},marginLeft:-54,marginRight:16,display:"inline-flex",icon:b.a,height:40})),c.a.createElement("h1",null,e.name)),c.a.createElement(d.a,{is:"a",height:40,href:e.github,target:"_blank"},"View on GitHub")))),c.a.createElement("div",{className:"Container Container--narrow",style:{marginBottom:120}},c.a.createElement(O.a,null,this.props.children))),t.length>0&&c.a.createElement("div",{className:"Overview-group Container Container--narrow",style:{marginBottom:120}},c.a.createElement("h3",{className:"Overview-groupTitle"},"Related"),c.a.createElement("div",{className:"Overview-groupItems"},t.map((function(e){return c.a.createElement(j.a,{key:e.name,id:e.id,image:e.image},e.name)})))),c.a.createElement("div",{className:"Container Container--narrow",style:{marginBottom:120}},c.a.createElement(d.a,{is:r.a,to:"/components",display:"inline-flex",iconBefore:b.a,height:40},"Back to Overview")))),c.a.createElement(v.a,null))},t}(c.a.Component),w=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e=this;return c.a.createElement(g.a,null,c.a.createElement(p.Location,null,(function(t){var n=t.location;return c.a.createElement(C,Object.assign({location:n},e.props))})))},t}(c.a.Component)}}]);
//# sourceMappingURL=component---src-pages-components-select-menu-mdx-deb82a4ab4be923c0948.js.map