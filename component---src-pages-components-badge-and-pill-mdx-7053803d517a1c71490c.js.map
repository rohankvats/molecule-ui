{"version":3,"sources":["webpack:///./src/pages/components/badge-and-pill.mdx","webpack:///./src/components/prop-types-table/PropTypeWrapper.js","webpack:///./src/components/prop-types-table/PropTypeDescription.js","webpack:///./src/components/prop-types-table/PropTypeHeading.js","webpack:///./src/components/PropsTable.js","webpack:///./src/components/Page.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent","PropTypeWrapper","render","children","this","className","PureComponent","PropTypeDescription","PropTypeHeading","defaultValue","name","required","type","isArrayOf","getSpecificPropTypes","value","map","val","join","Object","keys","key","PropsTable","prop","raw","getDocsForComponent","data","result","allComponentMetadata","edges","find","node","displayName","query","componentDocs","rename","composes","length","filePath","slice","indexOf","docblock","flatItems","IA","foundation","items","item","related","x","id","filter","reduce","acc","curr","Page","getMetaInfo","location","pathname","split","getRelatedItems","metaInfo","componentDidCatch","error","errorInfo","console","relatedItems","Fragment","property","content","autoFocus","onClick","navigate","marginLeft","marginRight","display","icon","ArrowLeftIcon","height","is","href","github","target","style","marginBottom","image","Link","to","iconBefore","React","Component","PageContainer"],"mappings":"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","file":"component---src-pages-components-badge-and-pill-mdx-7053803d517a1c71490c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rohan.vats/code/evergreen/docs/src/components/Page.js\";\nimport PropsTable from 'components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Badge`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Pill`}</inlineCode>{` components are labels with a background color.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Badge`}</strong>{`: Used for state and text. Slightly rounded corners.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Pill`}</strong>{`: Used only for numbers. Circular.`}</li>\n    </ul>\n    <h1>{`Badge`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Badge`}</inlineCode>{` component should only be used for state and general text labels.\nNot for numbers.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Badge color=\"green\">Success</Badge>\n`}</code></pre>\n    <h2>{`Color options`}</h2>\n    <h3>{`Solid badges`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane>\n  <Badge color=\"neutral\" isSolid marginRight={8}>neutral</Badge>\n  <Badge color=\"green\" isSolid marginRight={8}>green</Badge>\n  <Badge color=\"blue\" isSolid marginRight={8}>blue</Badge>\n  <Badge color=\"red\" isSolid marginRight={8}>red</Badge>\n  <Badge color=\"orange\" isSolid marginRight={8}>orange</Badge>\n  <Badge color=\"purple\" isSolid marginRight={8}>purple</Badge>\n  <Badge color=\"yellow\" isSolid marginRight={8}>yellow</Badge>\n  <Badge color=\"teal\" isSolid marginRight={8}>teal</Badge>\n</Pane>\n`}</code></pre>\n    <h3>{`Subtle badges`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane>\n  <Badge color=\"neutral\" marginRight={8}>neutral</Badge>\n  <Badge color=\"green\" marginRight={8}>green</Badge>\n  <Badge color=\"blue\" marginRight={8}>blue</Badge>\n  <Badge color=\"red\" marginRight={8}>red</Badge>\n  <Badge color=\"orange\" marginRight={8}>orange</Badge>\n  <Badge color=\"purple\" marginRight={8}>purple</Badge>\n  <Badge color=\"yellow\" marginRight={8}>yellow</Badge>\n  <Badge color=\"teal\" marginRight={8}>teal</Badge>\n</Pane>\n`}</code></pre>\n    <h2>{`When to use what badge`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"green\">Success</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"green\" isSolid>Success</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Operational, available, done, approved, added</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"red\">Removed</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"red\" isSolid>Removed</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Errors, declined, failed, removed, critical</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"blue\">In progress</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"blue\" isSolid>In progress</Badge>\n  </Pane>\n  <Pane>\n    <Strong>In progress, open, modified</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"purple\">Trial</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"purple\" isSolid>Trial</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Trial, new, information, help</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"yellow\">Moved</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"yellow\" isSolid>Moved</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Busy, blocked, missing, warning</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"collapse\",\n        \"collapse\": true\n      }}>{`<Pane display=\"flex\">\n  <Pane flexBasis={120}>\n    <Badge color=\"neutral\">Beta</Badge>\n  </Pane>\n  <Pane flexBasis={120}>\n    <Badge color=\"neutral\" isSolid>Beta</Badge>\n  </Pane>\n  <Pane>\n    <Strong>Betag</Strong>\n  </Pane>\n</Pane>\n`}</code></pre>\n    <PropsTable of=\"Badge\" mdxType=\"PropsTable\" />\n    <h1>{`Pill`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Pill`}</inlineCode>{` component should only be used for numbers. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Pane>\n  <Pill display=\"inline-flex\" margin={8}>0</Pill>\n  <Pill display=\"inline-flex\" margin={8} color=\"red\" isSolid>24</Pill>\n</Pane>\n`}</code></pre>\n    <PropsTable of=\"Pill\" mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class PropTypeWrapper extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node\n  }\n\n  render() {\n    const { children } = this.props\n    return <div className=\"PropTypeWrapper\">{children}</div>\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class PropTypeDescription extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node\n  }\n\n  render() {\n    const { children } = this.props\n    return <div className=\"PropTypeDescription\">{children}</div>\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nconst getSpecificPropTypes = ({ name, value }) => {\n  switch (name) {\n    // Enums are treated as just having simple values, so no recursive step needed.\n    case 'enum':\n      return value.map(val => val.value).join(' | ')\n    case 'union':\n      return value.map(val => getSpecificPropTypes(val)).join(' | ')\n    case 'arrayOf':\n      return `Array<${getSpecificPropTypes(value)}>`\n    case 'shape':\n      if (typeof value === 'object') {\n        return `{ ${Object.keys(value)\n          .map(\n            key =>\n              `${key}${value[key].required ? '' : '?'}: ${getSpecificPropTypes(\n                value[key]\n              )}`\n          )\n          .join(', ')} }`\n      }\n\n      return value\n\n    // In the case that the type isn't one of these \"nested\" types,\n    // i.e. it's just a primitive value, just return the name\n    default:\n      return name\n  }\n}\n\nexport default class PropTypeHeading extends PureComponent {\n  static propTypes = {\n    defaultValue: PropTypes.any,\n    name: PropTypes.string,\n    required: PropTypes.bool,\n    type: PropTypes.any,\n    isArrayOf: PropTypes.string\n  }\n\n  render() {\n    const { defaultValue, name, required, type, isArrayOf } = this.props\n\n    return (\n      <div className=\"PropTypeHeading\">\n        <code>\n          <span className=\"PropTypeHeading-name\">{name}</span>\n          <span className=\"PropTypeHeading-propType\">\n            {getSpecificPropTypes(type)}\n          </span>\n          {isArrayOf && (\n            <span className=\"PropTypeHeading-arrayOf\">{isArrayOf}</span>\n          )}\n        </code>\n        {defaultValue ? (\n          <code className=\"PropTypeHeading-defaultValue\">\n            {' '}\n            = {defaultValue.value}\n          </code>\n        ) : null}\n        {required ? (\n          <span className=\"PropTypeHeading-required\">required</span>\n        ) : null}\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport PropTypeWrapper from './prop-types-table/PropTypeWrapper'\nimport PropTypeDescription from './prop-types-table/PropTypeDescription'\nimport PropTypeHeading from './prop-types-table/PropTypeHeading'\n\nexport default class PropsTable extends PureComponent {\n  static propTypes = {\n    of: PropTypes.string.isRequired,\n    rename: PropTypes.string,\n  }\n\n  isArrayOf = (prop) => {\n    if (\n      prop.type &&\n      prop.type.name === 'arrayOf' &&\n      typeof prop.type.value === 'object' &&\n      typeof prop.type.value.raw === 'string'\n    ) {\n      return prop.type.value.raw\n    }\n  }\n\n  /**\n   * The StaticQuery loads all of the docs within MolecularUI.\n   * We find the docs for just the component we are looking for.\n   */\n  getDocsForComponent = (data) => {\n    const result = data.allComponentMetadata.edges.find(({ node }) => {\n      return node.displayName === this.props.of\n    })\n\n    if (result) return result.node\n    return null\n  }\n\n  render() {\n    return (\n      /**\n       * The plugin gatsby-transformer-react-docgen run react-docgen\n       * on all of MolecularUI and this query returns all of the data for\n       * creating prop types.\n       */\n      <StaticQuery\n        query={graphql`\n          {\n            allComponentMetadata {\n              edges {\n                node {\n                  displayName\n                  composes\n                  description {\n                    id\n                  }\n                  props {\n                    id\n                    name\n                    docblock\n                    defaultValue {\n                      value\n                      computed\n                    }\n                    type {\n                      name\n                      value\n                      raw\n                    }\n                    required\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={(data) => {\n          const componentDocs = this.getDocsForComponent(data)\n          if (!componentDocs)\n            return (\n              <div>\n                <p>\n                  The properties table for this component can’t be rendered at\n                  the moment, due to a bug.\n                </p>\n              </div>\n            )\n          return (\n            <>\n              <div className=\"Content\">\n                <h2 className=\"h2\">\n                  <code className=\"code\">\n                    {this.props.rename || componentDocs.displayName}\n                  </code>{' '}\n                  Props\n                </h2>\n                {componentDocs &&\n                  componentDocs.composes &&\n                  componentDocs.composes.length > 0 && (\n                    <div className=\"PropTypesTable-composes\">\n                      <p>\n                        <strong>This component composes </strong>\n                        {componentDocs.composes.map((filePath) => (\n                          <code key={filePath}>\n                            {filePath.slice(filePath.indexOf('/') + 1)}\n                          </code>\n                        ))}\n                      </p>\n                    </div>\n                  )}\n              </div>\n\n              {componentDocs.props.map((prop) => {\n                const isArrayOf = this.isArrayOf(prop)\n                // Figure out what makes sense here.\n                return (\n                  <PropTypeWrapper key={prop.name}>\n                    <PropTypeHeading\n                      name={prop.name}\n                      required={prop.required}\n                      defaultValue={prop.defaultValue}\n                      type={prop.type || {}}\n                      isArrayOf={isArrayOf}\n                    />\n                    {prop.docblock ? (\n                      <PropTypeDescription>{prop.docblock}</PropTypeDescription>\n                    ) : null}\n                  </PropTypeWrapper>\n                )\n              })}\n            </>\n          )\n        }}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { Location, navigate } from '@reach/router'\nimport { Button, IconButton, Tooltip, ArrowLeftIcon } from 'molecular-ui'\nimport IA from '../IA'\nimport DocsMDXProvider from './DocsMDXProvider'\nimport TopBar from './TopBar'\nimport Layout from './Layout'\nimport OverviewItem from './OverviewItem'\nimport PageFooter from './PageFooter'\n\nconst flatItems = [\n  ...IA.foundation.items.map(item => {\n    return {\n      ...item,\n      related: [\n        ...(item.related || []),\n        ...IA.foundation.items.map(x => x.id).filter(id => id !== item.id)\n      ]\n    }\n  }),\n  ...IA.components.items.reduce((acc, curr) => {\n    return [\n      ...acc,\n      ...curr.items.map(item => {\n        return {\n          ...item,\n          related: [\n            ...(item.related || []),\n            ...curr.items.map(item => item.id).filter(id => id !== item.id)\n          ]\n        }\n      })\n    ]\n  }, [])\n]\n\n/**\n * Used for component pages.\n */\nclass Page extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object.isRequired\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo)\n  }\n\n  getMetaInfo = () => {\n    const id = this.props.location.pathname.split('/')[2]\n    return flatItems.find(item => item.id === id)\n  }\n\n  getRelatedItems = metaInfo => {\n    return (metaInfo.related || []).map(id => {\n      return flatItems.find(item => item.id === id)\n    })\n  }\n\n  render() {\n    const metaInfo = this.getMetaInfo()\n    if (!metaInfo) return null\n    const relatedItems = this.getRelatedItems(metaInfo)\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>{metaInfo.name} · MolecularUI</title>\n          <meta\n            property=\"og:title\"\n            content={`${metaInfo.name} · MolecularUI`}\n          />\n          <meta\n            property=\"twitter:title\"\n            content={`${metaInfo.name} · MolecularUI`}\n          />\n        </Helmet>\n        <div>\n          <TopBar />\n          <main>\n            <article className=\"MDXPage\">\n              <header className=\"MDXPage-header\">\n                <div className=\"bg-tint1\">\n                  <div className=\"MDXPage-headerContent Container Container--narrow\">\n                    <div className=\"MDXPage-headerContentLeft\">\n                      <Tooltip content=\"Back to Overview\">\n                        <IconButton\n                          autoFocus\n                          onClick={() => {\n                            // Non-ideal, but Tooltip doesn't play nice when using is={Link}\n                            navigate('/components')\n                          }}\n                          marginLeft={-54}\n                          marginRight={16}\n                          display=\"inline-flex\"\n                          icon={ArrowLeftIcon}\n                          height={40}\n                        />\n                      </Tooltip>\n\n                      <h1>{metaInfo.name}</h1>\n                    </div>\n\n                    <Button\n                      is=\"a\"\n                      height={40}\n                      href={metaInfo.github}\n                      target=\"_blank\"\n                    >\n                      View on GitHub\n                    </Button>\n                  </div>\n                </div>\n              </header>\n              <div\n                className=\"Container Container--narrow\"\n                style={{ marginBottom: 120 }}\n              >\n                <DocsMDXProvider>{this.props.children}</DocsMDXProvider>\n              </div>\n            </article>\n\n            {relatedItems.length > 0 && (\n              <div\n                className=\"Overview-group Container Container--narrow\"\n                style={{ marginBottom: 120 }}\n              >\n                <h3 className=\"Overview-groupTitle\">Related</h3>\n                <div className=\"Overview-groupItems\">\n                  {relatedItems.map(item => {\n                    return (\n                      <OverviewItem\n                        key={item.name}\n                        id={item.id}\n                        image={item.image}\n                      >\n                        {item.name}\n                      </OverviewItem>\n                    )\n                  })}\n                </div>\n              </div>\n            )}\n\n            <div\n              className=\"Container Container--narrow\"\n              style={{ marginBottom: 120 }}\n            >\n              <Button\n                is={Link}\n                to=\"/components\"\n                display=\"inline-flex\"\n                iconBefore={ArrowLeftIcon}\n                height={40}\n              >\n                Back to Overview\n              </Button>\n            </div>\n          </main>\n        </div>\n        <PageFooter />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default class PageContainer extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Location>\n          {({ location }) => {\n            return <Page location={location} {...this.props} />\n          }}\n        </Location>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}