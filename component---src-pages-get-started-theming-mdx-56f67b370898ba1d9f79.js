(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{"3i6/":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return p})),t.d(n,"default",(function(){return T}));var a=t("zLVn"),r=t("mXGw"),o=t.n(r),i=t("7ljp"),l=t("qhky"),m=t("hPyG"),c=t("zngv"),s=t("fKWt"),u=t("7oih"),h=t("nD8F"),p={},d={_frontmatter:p},b=function(e){var n=e.children;return o.a.createElement(u.a,null,o.a.createElement(l.a,null,o.a.createElement("title",null,"Theming Â· MolecularUI")),o.a.createElement("div",{className:"MainLayout"},o.a.createElement(c.a,null),o.a.createElement("main",{className:"MainLayout-main"},o.a.createElement("div",{className:"MainLayout-content"},o.a.createElement("section",{className:"MainLayout-contentRight"},o.a.createElement("div",{className:"Container-nextToSidebar",style:{marginBottom:160}},o.a.createElement("div",{className:"Content"},o.a.createElement(m.a,null,n))))),o.a.createElement(s.a,null))),o.a.createElement(h.a,null))};function T(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)(b,Object.assign({},d,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h3",null,"Theme Provider"),Object(i.b)("p",null,"In order to style your app, you must wrap it in the ",Object(i.b)("inlineCode",{parentName:"p"},"ThemeProvider")," component.\nThis component uses the ",Object(i.b)("inlineCode",{parentName:"p"},"React.Context")," API under the hood."),Object(i.b)("p",null,"In order to use the ",Object(i.b)("inlineCode",{parentName:"p"},"ThemeProvider")," component, you must pass it a value prop that is a ",Object(i.b)("inlineCode",{parentName:"p"},"Theme")," object."),Object(i.b)("p",null,"Please note: at this moment in time, theming isn't fully supported yet! There are certain attributes of the ",Object(i.b)("inlineCode",{parentName:"p"},"Theme")," object that are required so please be sure you have them when providing a custom theme."),Object(i.b)("h2",null,"Simple theming"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"ThemeProvider")," Component, you can either override the default styles(shown below) or use your own theme completely.\nYou can add anything you want to the theme object, as long as you have required properties."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"const newTheme = {\n  ...defaultTheme,\n  spinnerColor: 'hotpink'\n}\n\nconst ThemedApp = () => (\n  <ThemeProvider value={newTheme}>\n    <Spinner />\n  </ThemeProvider>\n)\n\nrender(<ThemedApp />)\n")),Object(i.b)("h2",null,"Nested theming"),Object(i.b)("p",null,"You can theme certain parts of your app differently by nesting the ",Object(i.b)("inlineCode",{parentName:"p"},"ThemeProvider")," components."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"const parentTheme = {\n  ...defaultTheme,\n  spinnerColor: 'hotpink'\n}\n\nconst childTheme = {\n  ...defaultTheme,\n  spinnerColor: 'blue'\n}\n\nconst ThemedParent = ({ children }) => (\n  <ThemeProvider value={parentTheme}>\n    <Spinner />\n    { children }\n  </ThemeProvider>\n)\n\nconst ThemedChild = () => (\n  <ThemeProvider value={childTheme}>\n    <Spinner />\n  </ThemeProvider>\n)\n\nrender(\n  <ThemedParent>\n    <ThemedChild />\n  </ThemedParent>\n)\n")),Object(i.b)("h2",null,"Using withTheme"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"withTheme")," HOC allows you to easily pass the theme object down to your components."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"const theme = {\n  ...defaultTheme,\n  myNewButtonStyles: {\n    color: 'white',\n    backgroundColor: 'hotpink',\n    height: 30,\n    borderRadius: '5px',\n  }\n}\n\nconst ThemedApp = ({ children }) => (\n  <ThemeProvider value={theme}>\n    { children }\n  </ThemeProvider>\n)\n\nconst MyNewButton = ({ theme }) => (\n  <button style={theme.myNewButtonStyles}>\n    Custom styled button\n  </button>\n)\n\nconst MyNewThemedButton = withTheme(MyNewButton)\n\nrender(\n  <ThemedApp>\n    <MyNewThemedButton />\n  </ThemedApp>\n)\n")),Object(i.b)("h2",null,"Using useTheme"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"useTheme")," hook provides the same functionalities as the ",Object(i.b)("inlineCode",{parentName:"p"},"withTheme")," HOC."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"const theme = {\n  ...defaultTheme,\n  myNewButtonStyles: {\n    color: 'white',\n    backgroundColor: 'hotpink',\n    height: 30,\n    borderRadius: '5px',\n  }\n}\n\nconst ThemedApp = ({ children }) => (\n  <ThemeProvider value={theme}>\n    { children }\n  </ThemeProvider>\n)\n\nconst MyNewThemedButton = () => {\n  const theme = useTheme()\n\n  return (\n    <button style={theme.myNewButtonStyles}>\n      Custom styled button\n    </button>\n  )\n}\n\nrender(\n  <ThemedApp>\n    <MyNewThemedButton />\n  </ThemedApp>\n)\n")))}T.isMDXComponent=!0},fKWt:function(e,n,t){"use strict";t.d(n,"a",(function(){return c}));var a=t("dI71"),r=t("mXGw"),o=t.n(r),i=t("zLVn"),l=t("Wbzz"),m=function(e){function n(){return e.apply(this,arguments)||this}return Object(a.a)(n,e),n.prototype.render=function(){var e=this.props,n=(e.children,e.groups),t=Object(i.a)(e,["children","groups"]);return o.a.createElement("aside",Object.assign({className:"MainLayout-sidebar Sidebar"},t),o.a.createElement("div",{className:"Sidebar-inner"},n.map((function(e){return o.a.createElement("div",{key:e.title||e.links[0].label,className:"NavGroup"},e.title&&o.a.createElement("h3",{className:"NavGroup-title"},e.title),o.a.createElement("nav",{className:"NavGroup-nav"},e.links.map((function(e){var n=e.label,t=e.to,a=e.exact;return o.a.createElement(l.a,{key:t,activeClassName:"is-active",to:t,exact:a},n)}))))}))))},n}(r.PureComponent);m.defaultProps={groups:[]};var c=function(e){function n(){return e.apply(this,arguments)||this}return Object(a.a)(n,e),n.prototype.render=function(){return o.a.createElement(m,this.props)},n}(r.PureComponent);c.defaultProps={groups:[{links:[{to:"/get-started/introduction",label:"Introduction"},{to:"/get-started/theming",label:"Theming"},{to:"/get-started/v5-migration-guide",label:"Migrating to v5"}]}]}}}]);
//# sourceMappingURL=component---src-pages-get-started-theming-mdx-56f67b370898ba1d9f79.js.map